{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// Sorting by header of column:\n\nconst body = document.querySelector('body');\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tBody = table.querySelector('tbody');\nconst cells = tBody.querySelectorAll('td');\nlet rows = [...tBody.querySelectorAll('tr')];\nconst sortOrder = Array(headers.length).fill(true);\n\nfunction updateRows() {\n  rows = [...tBody.querySelectorAll('tr')];\n}\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    setSortTable(index);\n  });\n});\n\nconst setSortTable = (columnIndex) => {\n  updateRows();\n\n  const sortedRows = rows.sort((a, b) => {\n    const aValue = a.cells[columnIndex].textContent.trim();\n    const bValue = b.cells[columnIndex].textContent.trim();\n\n    if (!isNaN(aValue) && !isNaN(bValue)) {\n      return sortOrder[columnIndex] ? aValue - bValue : bValue - aValue;\n    }\n\n    if (columnIndex === 4) {\n      const aSalary = parseFloat(aValue.replace(/[$,]/g, ''));\n      const bSalary = parseFloat(bValue.replace(/[$,]/g, ''));\n\n      return sortOrder[columnIndex] ? aSalary - bSalary : bSalary - aSalary;\n    }\n\n    return sortOrder[columnIndex]\n      ? aValue.localeCompare(bValue)\n      : bValue.localeCompare(aValue);\n  });\n\n  tBody.innerHTML = '';\n  tBody.append(...sortedRows);\n  sortOrder[columnIndex] = !sortOrder[columnIndex];\n};\n\n// Selecting row:\n\n[...tBody.rows].forEach((row) => {\n  row.addEventListener('click', (e) => {\n    const rowsActive = tBody.querySelectorAll('tr.active');\n\n    rowsActive.forEach((rowActive) => {\n      rowActive.classList.remove('active');\n    });\n\n    row.classList.toggle('active');\n  });\n});\n\n// Create form:\n\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\n\nform.innerHTML = `\n  <label>\n    Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n  </label>\n  <label>\n    Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n  </label>\n  <label>\n    Office:\n    <select name=\"office\" data-qa=\"office\" required>\n      <option>Tokyo</option>\n      <option>Singapore</option>\n      <option>London</option>\n      <option>New York</option>\n      <option>Edinburgh</option>\n      <option>San Francisco</option>\n    </select>\n  </label>\n  <label>\n    Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n  </label>\n  <label>\n    Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n  </label>\n  <button type=\"button\">Save to table</button>\n`;\n\nbody.append(form);\n\n// Add new row:\n\nform.querySelector('button').addEventListener('click', () => {\n  if (!checkFormFields()) {\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  if (\n    form.elements.name.value &&\n    form.elements.position.value &&\n    form.elements.office.value &&\n    form.elements.age.value &&\n    form.elements.salary.value\n  ) {\n    newRow.insertCell(0).textContent = form.elements.name.value.trim();\n    newRow.insertCell(1).textContent = form.elements.position.value.trim();\n    newRow.insertCell(2).textContent = form.elements.office.value.trim();\n    newRow.insertCell(3).textContent = parseInt(form.elements.age.value, 10);\n\n    const salaryFormatted = parseFloat(\n      form.elements.salary.value.replace(/[^0-9.]/g, ''),\n    );\n\n    newRow.insertCell(4).textContent =\n      `$${new Intl.NumberFormat('us-IN').format(salaryFormatted)}`;\n\n    showNotification(\n      'Success!',\n      'New employee is successfuly added',\n      'success',\n    );\n    form.reset();\n  }\n\n  tBody.append(newRow);\n});\n\n// Appearance of notifications:\n\nfunction showNotification(title, message, type) {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${type}`;\n  notification.setAttribute('data-qa', 'notification');\n\n  notification.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${message}</p>\n  `;\n\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 4000);\n}\n\nfunction checkFormFields() {\n  const employeeName = form.elements.name.value.trim();\n\n  if (employeeName.length > 0 && employeeName.length < 4) {\n    showNotification('Error!', 'The minimum name length is 4 letters', 'error');\n\n    return false;\n  }\n\n  const employeeAge = parseInt(form.elements.age.value, 10);\n\n  if (employeeAge < 18 || employeeAge > 90) {\n    showNotification('Error!', 'You are too young/old for this', 'error');\n\n    return false;\n  }\n\n  [...form.elements].every((input) => {\n    if (input.tagName === 'INPUT' || input.tagName === 'SELECT') {\n      if (!input.value.trim()) {\n        showNotification('Error!', 'Fill in all fields', 'error');\n\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  return true;\n}\n\ncells.forEach((cell) => {\n  const editCell = document.createElement('input');\n\n  editCell.classList.add('cell-input');\n\n  cell.addEventListener('dblclick', () => {\n    cell.replaceWith(editCell);\n  });\n\n  editCell.addEventListener('blur', (e) => {\n    const td = document.createElement('td');\n\n    if (editCell.value !== '') {\n      editCell.replaceWith(td);\n      td.textContent = editCell.value;\n    } else {\n      editCell.replaceWith(cell);\n    }\n  });\n\n  editCell.addEventListener('keypress', (e) => {\n    const td = document.createElement('td');\n\n    if (e.key === 'Enter') {\n      editCell.replaceWith(td);\n      td.textContent = editCell.value;\n    }\n  });\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}